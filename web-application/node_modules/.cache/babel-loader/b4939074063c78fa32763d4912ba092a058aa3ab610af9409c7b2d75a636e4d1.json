{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/auth';\nexport const login = async (username, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      username,\n      password\n    });\n    if (response.data.token) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Login error', error);\n    throw error;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('user');\n};\nexport const getCurrentUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};\nexport const isLoggedIn = () => {\n  return !!getCurrentUser();\n};\nexport const checkUserRole = role => {\n  const user = getCurrentUser();\n  return user && user.roles.includes(role);\n};","map":{"version":3,"names":["axios","API_URL","login","username","password","response","post","data","token","localStorage","setItem","JSON","stringify","error","console","logout","removeItem","getCurrentUser","user","getItem","parse","isLoggedIn","checkUserRole","role","roles","includes"],"sources":["C:/Users/Tartu/Downloads/IT-akadeemia-leht/web-application/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/auth';\r\n\r\nexport const login = async (username: string, password: string) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/login`, { username, password });\r\n        if (response.data.token) {\r\n            localStorage.setItem('user', JSON.stringify(response.data));\r\n        }\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Login error', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('user');\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n};\r\n\r\nexport const isLoggedIn = () => {\r\n    return !!getCurrentUser();\r\n};\r\n\r\nexport const checkUserRole = (role: string) => {\r\n    const user = getCurrentUser();\r\n    return user && user.roles.includes(role);\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;EAC/D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAE;MAAEE,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC7E,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACrBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC/D;IACA,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;IACnC,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,MAAM,GAAGA,CAAA,KAAM;EACxBN,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;AACnC,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,MAAMC,IAAI,GAAGT,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOD,IAAI,GAAGP,IAAI,CAACS,KAAK,CAACF,IAAI,CAAC,GAAG,IAAI;AACzC,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAO,CAAC,CAACJ,cAAc,CAAC,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMK,aAAa,GAAIC,IAAY,IAAK;EAC3C,MAAML,IAAI,GAAGD,cAAc,CAAC,CAAC;EAC7B,OAAOC,IAAI,IAAIA,IAAI,CAACM,KAAK,CAACC,QAAQ,CAACF,IAAI,CAAC;AAC5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}